/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Tue May 21 17:16:27 2019. */

#ifndef PB_LEDGERVAULT_PSD_PSD_PB_H_INCLUDED
#define PB_LEDGERVAULT_PSD_PSD_PB_H_INCLUDED
#include <pb.h>

#include "common.pb.h"

#include "vault.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _ledgervault_psd_Status {
    ledgervault_psd_Status_ALREADY_PRESENT = 0,
    ledgervault_psd_Status_NEW = 1,
    ledgervault_psd_Status_REMOVED = 2
} ledgervault_psd_Status;
#define _ledgervault_psd_Status_MIN ledgervault_psd_Status_ALREADY_PRESENT
#define _ledgervault_psd_Status_MAX ledgervault_psd_Status_REMOVED
#define _ledgervault_psd_Status_ARRAYSIZE ((ledgervault_psd_Status)(ledgervault_psd_Status_REMOVED+1))

/* Struct definitions */
typedef struct _ledgervault_psd_AccountRule {
    ledgervault_AccountRuleType type;
    pb_bytes_array_t *payload;
    ledgervault_psd_Status status;
    bool updated;
/* @@protoc_insertion_point(struct:ledgervault_psd_AccountRule) */
} ledgervault_psd_AccountRule;

typedef struct _ledgervault_psd_AccountRuleSet {
    char *name;
    char *nameNew;
    pb_size_t accountRules_count;
    struct _ledgervault_psd_AccountRule *accountRules;
    ledgervault_psd_Status status;
/* @@protoc_insertion_point(struct:ledgervault_psd_AccountRuleSet) */
} ledgervault_psd_AccountRuleSet;

typedef struct _ledgervault_psd_Account_Account {
    char *name;
    char *nameNew;
    ledgervault_CurrencyScriptType currencyScriptType;
    bool archived;
    bool archivedNew;
/* @@protoc_insertion_point(struct:ledgervault_psd_Account_Account) */
} ledgervault_psd_Account_Account;

typedef struct _ledgervault_psd_Account_Wallet {
    char *name;
    char *nameNew;
    ledgervault_Bip32Path bip32Path;
    bool archived;
    bool archivedNew;
/* @@protoc_insertion_point(struct:ledgervault_psd_Account_Wallet) */
} ledgervault_psd_Account_Wallet;

typedef struct _ledgervault_psd_AdminGroup {
    char *name;
    char *nameNew;
    uint32_t policyM;
    uint32_t policyMNew;
    uint32_t policyM_ReadOnlyWallet;
    uint32_t policyM_ReadOnlyWalletNew;
    pb_size_t users_count;
    struct _ledgervault_psd_User *users;
/* @@protoc_insertion_point(struct:ledgervault_psd_AdminGroup) */
} ledgervault_psd_AdminGroup;

typedef struct _ledgervault_psd_OperatorGroup {
    char *name;
    char *nameNew;
    bool revoked;
    bool revokedNew;
    pb_size_t users_count;
    struct _ledgervault_psd_User *users;
/* @@protoc_insertion_point(struct:ledgervault_psd_OperatorGroup) */
} ledgervault_psd_OperatorGroup;

typedef struct _ledgervault_psd_Partition {
    bool bootstrapEnabled;
    bool bootstrapEnabledNew;
    char *workspaceName;
    char *workspaceNameNew;
    pb_size_t adminGroups_count;
    struct _ledgervault_psd_AdminGroup *adminGroups;
    pb_size_t sharedOwners_count;
    struct _ledgervault_psd_User *sharedOwners;
/* @@protoc_insertion_point(struct:ledgervault_psd_Partition) */
} ledgervault_psd_Partition;

typedef struct _ledgervault_psd_PsdRequest {
    pb_byte_t challenge[32];
    pb_size_t which_one;
    union {
        struct _ledgervault_psd_Partition *Partition;
        struct _ledgervault_psd_OperatorGroup *OperatorGroup;
        struct _ledgervault_psd_User *User;
        struct _ledgervault_psd_Account *Account;
    };
/* @@protoc_insertion_point(struct:ledgervault_psd_PsdRequest) */
} ledgervault_psd_PsdRequest;

typedef struct _ledgervault_psd_User {
    ledgervault_User_Type type;
    ledgervault_User_Role role;
    char *name;
    char *nameNew;
    pb_byte_t confidentialityKey[65];
    ledgervault_psd_Status status;
/* @@protoc_insertion_point(struct:ledgervault_psd_User) */
} ledgervault_psd_User;

typedef struct _ledgervault_psd_Account {
    ledgervault_psd_Account_Wallet wallet;
    ledgervault_psd_Account_Account account;
    pb_size_t accountRuleSets_count;
    struct _ledgervault_psd_AccountRuleSet *accountRuleSets;
/* @@protoc_insertion_point(struct:ledgervault_psd_Account) */
} ledgervault_psd_Account;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ledgervault_psd_User_init_default        {(ledgervault_User_Type)0, (ledgervault_User_Role)0, NULL, NULL, {0}, (ledgervault_psd_Status)0}
#define ledgervault_psd_AdminGroup_init_default  {NULL, NULL, 0, 0, 0, 0, 0, NULL}
#define ledgervault_psd_OperatorGroup_init_default {NULL, NULL, 0, 0, 0, NULL}
#define ledgervault_psd_Partition_init_default   {0, 0, NULL, NULL, 0, NULL, 0, NULL}
#define ledgervault_psd_AccountRule_init_default {(ledgervault_AccountRuleType)0, NULL, (ledgervault_psd_Status)0, 0}
#define ledgervault_psd_AccountRuleSet_init_default {NULL, NULL, 0, NULL, (ledgervault_psd_Status)0}
#define ledgervault_psd_Account_init_default     {ledgervault_psd_Account_Wallet_init_default, ledgervault_psd_Account_Account_init_default, 0, NULL}
#define ledgervault_psd_Account_Wallet_init_default {NULL, NULL, ledgervault_Bip32Path_init_default, 0, 0}
#define ledgervault_psd_Account_Account_init_default {NULL, NULL, (ledgervault_CurrencyScriptType)0, 0, 0}
#define ledgervault_psd_PsdRequest_init_default  {{0}, 0, {NULL}}
#define ledgervault_psd_User_init_zero           {(ledgervault_User_Type)0, (ledgervault_User_Role)0, NULL, NULL, {0}, (ledgervault_psd_Status)0}
#define ledgervault_psd_AdminGroup_init_zero     {NULL, NULL, 0, 0, 0, 0, 0, NULL}
#define ledgervault_psd_OperatorGroup_init_zero  {NULL, NULL, 0, 0, 0, NULL}
#define ledgervault_psd_Partition_init_zero      {0, 0, NULL, NULL, 0, NULL, 0, NULL}
#define ledgervault_psd_AccountRule_init_zero    {(ledgervault_AccountRuleType)0, NULL, (ledgervault_psd_Status)0, 0}
#define ledgervault_psd_AccountRuleSet_init_zero {NULL, NULL, 0, NULL, (ledgervault_psd_Status)0}
#define ledgervault_psd_Account_init_zero        {ledgervault_psd_Account_Wallet_init_zero, ledgervault_psd_Account_Account_init_zero, 0, NULL}
#define ledgervault_psd_Account_Wallet_init_zero {NULL, NULL, ledgervault_Bip32Path_init_zero, 0, 0}
#define ledgervault_psd_Account_Account_init_zero {NULL, NULL, (ledgervault_CurrencyScriptType)0, 0, 0}
#define ledgervault_psd_PsdRequest_init_zero     {{0}, 0, {NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define ledgervault_psd_AccountRule_type_tag     1
#define ledgervault_psd_AccountRule_payload_tag  2
#define ledgervault_psd_AccountRule_status_tag   3
#define ledgervault_psd_AccountRule_updated_tag  4
#define ledgervault_psd_AccountRuleSet_name_tag  1
#define ledgervault_psd_AccountRuleSet_nameNew_tag 2
#define ledgervault_psd_AccountRuleSet_accountRules_tag 3
#define ledgervault_psd_AccountRuleSet_status_tag 4
#define ledgervault_psd_Account_Account_name_tag 6
#define ledgervault_psd_Account_Account_nameNew_tag 7
#define ledgervault_psd_Account_Account_currencyScriptType_tag 8
#define ledgervault_psd_Account_Account_archived_tag 9
#define ledgervault_psd_Account_Account_archivedNew_tag 10
#define ledgervault_psd_Account_Wallet_name_tag  1
#define ledgervault_psd_Account_Wallet_nameNew_tag 2
#define ledgervault_psd_Account_Wallet_bip32Path_tag 3
#define ledgervault_psd_Account_Wallet_archived_tag 4
#define ledgervault_psd_Account_Wallet_archivedNew_tag 5
#define ledgervault_psd_AdminGroup_name_tag      1
#define ledgervault_psd_AdminGroup_nameNew_tag   2
#define ledgervault_psd_AdminGroup_policyM_tag   3
#define ledgervault_psd_AdminGroup_policyMNew_tag 4
#define ledgervault_psd_AdminGroup_policyM_ReadOnlyWallet_tag 5
#define ledgervault_psd_AdminGroup_policyM_ReadOnlyWalletNew_tag 6
#define ledgervault_psd_AdminGroup_users_tag     7
#define ledgervault_psd_OperatorGroup_name_tag   1
#define ledgervault_psd_OperatorGroup_nameNew_tag 2
#define ledgervault_psd_OperatorGroup_revoked_tag 3
#define ledgervault_psd_OperatorGroup_revokedNew_tag 4
#define ledgervault_psd_OperatorGroup_users_tag  7
#define ledgervault_psd_Partition_bootstrapEnabled_tag 1
#define ledgervault_psd_Partition_bootstrapEnabledNew_tag 2
#define ledgervault_psd_Partition_workspaceName_tag 3
#define ledgervault_psd_Partition_workspaceNameNew_tag 4
#define ledgervault_psd_Partition_adminGroups_tag 7
#define ledgervault_psd_Partition_sharedOwners_tag 8
#define ledgervault_psd_PsdRequest_Partition_tag 2
#define ledgervault_psd_PsdRequest_OperatorGroup_tag 3
#define ledgervault_psd_PsdRequest_User_tag      4
#define ledgervault_psd_PsdRequest_Account_tag   5
#define ledgervault_psd_PsdRequest_challenge_tag 1
#define ledgervault_psd_User_type_tag            1
#define ledgervault_psd_User_role_tag            2
#define ledgervault_psd_User_name_tag            3
#define ledgervault_psd_User_nameNew_tag         4
#define ledgervault_psd_User_confidentialityKey_tag 5
#define ledgervault_psd_User_status_tag          6
#define ledgervault_psd_Account_wallet_tag       1
#define ledgervault_psd_Account_account_tag      2
#define ledgervault_psd_Account_accountRuleSets_tag 11

/* Struct field encoding specification for nanopb */
extern const pb_field_t ledgervault_psd_User_fields[7];
extern const pb_field_t ledgervault_psd_AdminGroup_fields[8];
extern const pb_field_t ledgervault_psd_OperatorGroup_fields[6];
extern const pb_field_t ledgervault_psd_Partition_fields[7];
extern const pb_field_t ledgervault_psd_AccountRule_fields[5];
extern const pb_field_t ledgervault_psd_AccountRuleSet_fields[5];
extern const pb_field_t ledgervault_psd_Account_fields[4];
extern const pb_field_t ledgervault_psd_Account_Wallet_fields[6];
extern const pb_field_t ledgervault_psd_Account_Account_fields[6];
extern const pb_field_t ledgervault_psd_PsdRequest_fields[6];

/* Maximum encoded size of messages (where known) */
/* ledgervault_psd_User_size depends on runtime parameters */
/* ledgervault_psd_AdminGroup_size depends on runtime parameters */
/* ledgervault_psd_OperatorGroup_size depends on runtime parameters */
/* ledgervault_psd_Partition_size depends on runtime parameters */
/* ledgervault_psd_AccountRule_size depends on runtime parameters */
/* ledgervault_psd_AccountRuleSet_size depends on runtime parameters */
/* ledgervault_psd_Account_size depends on runtime parameters */
/* ledgervault_psd_Account_Wallet_size depends on runtime parameters */
/* ledgervault_psd_Account_Account_size depends on runtime parameters */
/* ledgervault_psd_PsdRequest_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PSD_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
