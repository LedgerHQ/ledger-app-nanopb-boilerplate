/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Mon May 20 17:27:22 2019. */

#ifndef PB_LEDGERVAULT_INIT_PB_H_INCLUDED
#define PB_LEDGERVAULT_INIT_PB_H_INCLUDED
#include <pb.h>

#include "common.pb.h"

#include "error.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ledgervault_SubmitWrapFragments {
    pb_size_t fragments_count;
    struct _ledgervault_WrapFragment *fragments;
/* @@protoc_insertion_point(struct:ledgervault_SubmitWrapFragments) */
} ledgervault_SubmitWrapFragments;

typedef struct _ledgervault_InitiateWrapProvisioning {
    uint32_t shardNumbers;
    uint32_t index;
/* @@protoc_insertion_point(struct:ledgervault_InitiateWrapProvisioning) */
} ledgervault_InitiateWrapProvisioning;

typedef struct _ledgervault_InitiateWrapProvisioningResponse {
    pb_byte_t ephemeralPublicKey[65];
    ledgervault_Certificate certificate;
/* @@protoc_insertion_point(struct:ledgervault_InitiateWrapProvisioningResponse) */
} ledgervault_InitiateWrapProvisioningResponse;

typedef PB_BYTES_ARRAY_T(32) ledgervault_SubmitWrapFragmentsResponse_wrapChecksum_t;
typedef struct _ledgervault_SubmitWrapFragmentsResponse {
    ledgervault_SubmitWrapFragmentsResponse_wrapChecksum_t wrapChecksum;
/* @@protoc_insertion_point(struct:ledgervault_SubmitWrapFragmentsResponse) */
} ledgervault_SubmitWrapFragmentsResponse;

typedef PB_BYTES_ARRAY_T(100) ledgervault_WrapFragment_wrapBlob_t;
typedef struct _ledgervault_WrapFragment {
    pb_byte_t ephemeralPublicKey[65];
    ledgervault_Certificate certificate;
    ledgervault_WrapFragment_wrapBlob_t wrapBlob;
/* @@protoc_insertion_point(struct:ledgervault_WrapFragment) */
} ledgervault_WrapFragment;

typedef struct _ledgervault_InitRequest {
    pb_size_t which_one;
    union {
        ledgervault_InitiateWrapProvisioning InitiateWrapProvisioning;
        ledgervault_SubmitWrapFragments SubmitWrapFragments;
    };
/* @@protoc_insertion_point(struct:ledgervault_InitRequest) */
} ledgervault_InitRequest;

typedef struct _ledgervault_InitResponse {
    pb_size_t which_one;
    union {
        ledgervault_InitiateWrapProvisioningResponse InitiateWrapProvisioningResponse;
        ledgervault_SubmitWrapFragmentsResponse SubmitWrapFragmentsResponse;
        ledgervault_ExceptionResponse ExceptionResponse;
    };
/* @@protoc_insertion_point(struct:ledgervault_InitResponse) */
} ledgervault_InitResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ledgervault_WrapFragment_init_default    {{0}, ledgervault_Certificate_init_default, {0, {0}}}
#define ledgervault_InitiateWrapProvisioning_init_default {0, 0}
#define ledgervault_InitiateWrapProvisioningResponse_init_default {{0}, ledgervault_Certificate_init_default}
#define ledgervault_SubmitWrapFragments_init_default {0, NULL}
#define ledgervault_SubmitWrapFragmentsResponse_init_default {{0, {0}}}
#define ledgervault_InitRequest_init_default     {0, {ledgervault_InitiateWrapProvisioning_init_default}}
#define ledgervault_InitResponse_init_default    {0, {ledgervault_InitiateWrapProvisioningResponse_init_default}}
#define ledgervault_WrapFragment_init_zero       {{0}, ledgervault_Certificate_init_zero, {0, {0}}}
#define ledgervault_InitiateWrapProvisioning_init_zero {0, 0}
#define ledgervault_InitiateWrapProvisioningResponse_init_zero {{0}, ledgervault_Certificate_init_zero}
#define ledgervault_SubmitWrapFragments_init_zero {0, NULL}
#define ledgervault_SubmitWrapFragmentsResponse_init_zero {{0, {0}}}
#define ledgervault_InitRequest_init_zero        {0, {ledgervault_InitiateWrapProvisioning_init_zero}}
#define ledgervault_InitResponse_init_zero       {0, {ledgervault_InitiateWrapProvisioningResponse_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define ledgervault_SubmitWrapFragments_fragments_tag 1
#define ledgervault_InitiateWrapProvisioning_shardNumbers_tag 1
#define ledgervault_InitiateWrapProvisioning_index_tag 2
#define ledgervault_InitiateWrapProvisioningResponse_ephemeralPublicKey_tag 1
#define ledgervault_InitiateWrapProvisioningResponse_certificate_tag 2
#define ledgervault_SubmitWrapFragmentsResponse_wrapChecksum_tag 1
#define ledgervault_WrapFragment_ephemeralPublicKey_tag 1
#define ledgervault_WrapFragment_certificate_tag 2
#define ledgervault_WrapFragment_wrapBlob_tag    3
#define ledgervault_InitRequest_InitiateWrapProvisioning_tag 1
#define ledgervault_InitRequest_SubmitWrapFragments_tag 2
#define ledgervault_InitResponse_InitiateWrapProvisioningResponse_tag 1
#define ledgervault_InitResponse_SubmitWrapFragmentsResponse_tag 2
#define ledgervault_InitResponse_ExceptionResponse_tag 999

/* Struct field encoding specification for nanopb */
extern const pb_field_t ledgervault_WrapFragment_fields[4];
extern const pb_field_t ledgervault_InitiateWrapProvisioning_fields[3];
extern const pb_field_t ledgervault_InitiateWrapProvisioningResponse_fields[3];
extern const pb_field_t ledgervault_SubmitWrapFragments_fields[2];
extern const pb_field_t ledgervault_SubmitWrapFragmentsResponse_fields[2];
extern const pb_field_t ledgervault_InitRequest_fields[3];
extern const pb_field_t ledgervault_InitResponse_fields[4];

/* Maximum encoded size of messages (where known) */
#define ledgervault_WrapFragment_size            421
#define ledgervault_InitiateWrapProvisioning_size 12
#define ledgervault_InitiateWrapProvisioningResponse_size 319
/* ledgervault_SubmitWrapFragments_size depends on runtime parameters */
#define ledgervault_SubmitWrapFragmentsResponse_size 34
/* ledgervault_InitRequest_size depends on runtime parameters */
#define ledgervault_InitResponse_size            514

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define INIT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
