/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Mon May 20 17:27:22 2019. */

#ifndef PB_LEDGERVAULT_ERROR_PB_H_INCLUDED
#define PB_LEDGERVAULT_ERROR_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ledgervault_ExceptionResponse {
    uint32_t errorCode;
    char exception[501];
/* @@protoc_insertion_point(struct:ledgervault_ExceptionResponse) */
} ledgervault_ExceptionResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ledgervault_ExceptionResponse_init_default {0, ""}
#define ledgervault_ExceptionResponse_init_zero  {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define ledgervault_ExceptionResponse_errorCode_tag 1
#define ledgervault_ExceptionResponse_exception_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t ledgervault_ExceptionResponse_fields[3];

/* Maximum encoded size of messages (where known) */
#define ledgervault_ExceptionResponse_size       510

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ERROR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
